{
  "openapi": "3.0.0",
  "info": {
    "title": "Watch info service 2022",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://34.136.15.182:82"
    }
  ],
  "paths": {
    "/watch": {
      "post": {
        "summary": "Add a new watch to the store",
        "requestBody": {
          "description": "Watch object that needs to be added to the store",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Watch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/watch/{sku}": {
      "get": {
        "summary": "Return watch data",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "description": "SKU of the watch to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Watch"
                }
              }
            }
          },
          "404": {
            "description": "Watch not found"
          }
        }
      },
      "put": {
        "summary": "Updates a watch in the store with form data",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "description": "SKU of the watch that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Properties that needs to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Watch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Watch not found"
          }
        }
      },
      "delete": {
        "summary": "Deletes a watch",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "description": "SKU of the watch to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Watch not found"
          }
        }
      }
    },
    "/watch/search": {
      "get": {
        "summary": "Finds watches by SKU",
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "description": "partial sku",
            "example": "CAR2",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Watch"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/watch_mongo": {
      "post": {
        "summary": "Add a new watch to the store",
        "requestBody": {
          "description": "Watch object that needs to be added to the store",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Watch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/watch_mongo/{sku}": {
      "get": {
        "summary": "Return watch data",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "description": "SKU of the watch to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Watch"
                }
              }
            }
          },
          "404": {
            "description": "Watch not found"
          }
        }
      },
      "put": {
        "summary": "Updates a watch in the store with form data",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "description": "SKU of the watch that needs to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Properties that needs to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Watch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Watch not found"
          }
        }
      },
      "delete": {
        "summary": "Deletes a watch",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "description": "SKU of the watch to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Watch not found"
          }
        }
      }
    },
    "/watch/search_mongo": {
      "get": {
        "summary": "Finds watches by SKU",
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "description": "partial sku",
            "example": "CAR2",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Watch"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Watch": {
        "type": "object",
        "required": [
          "sku",
          "type",
          "gender",
          "year"
        ],
        "properties": {
          "sku": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "watch",
              "chrono"
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "man",
              "woman"
            ]
          },
          "year": {
            "type": "integer",
            "format": "int64"
          },
          "dial_material": {
            "type": "string"
          },
          "case_material": {
            "type": "string"
          },
          "bracelet_material": {
            "type": "string"
          },
          "movement": {
            "type": "string"
          }
        }
      }
    }
  }
}